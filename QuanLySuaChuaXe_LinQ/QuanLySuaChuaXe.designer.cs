#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLySuaChuaXe_LinQ
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QuanLySuaChuaXe")]
	public partial class QuanLySuaChuaXeDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertXe(Xe instance);
    partial void UpdateXe(Xe instance);
    partial void DeleteXe(Xe instance);
    partial void InsertChiTietHopDong(ChiTietHopDong instance);
    partial void UpdateChiTietHopDong(ChiTietHopDong instance);
    partial void DeleteChiTietHopDong(ChiTietHopDong instance);
    partial void InsertCongViec(CongViec instance);
    partial void UpdateCongViec(CongViec instance);
    partial void DeleteCongViec(CongViec instance);
    partial void InsertHopDong(HopDong instance);
    partial void UpdateHopDong(HopDong instance);
    partial void DeleteHopDong(HopDong instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertKhaNang(KhaNang instance);
    partial void UpdateKhaNang(KhaNang instance);
    partial void DeleteKhaNang(KhaNang instance);
    partial void InsertNhomCongViec(NhomCongViec instance);
    partial void UpdateNhomCongViec(NhomCongViec instance);
    partial void DeleteNhomCongViec(NhomCongViec instance);
    partial void InsertNhomTho(NhomTho instance);
    partial void UpdateNhomTho(NhomTho instance);
    partial void DeleteNhomTho(NhomTho instance);
    partial void InsertPhieuThu(PhieuThu instance);
    partial void UpdatePhieuThu(PhieuThu instance);
    partial void DeletePhieuThu(PhieuThu instance);
    partial void InsertTho(Tho instance);
    partial void UpdateTho(Tho instance);
    partial void DeleteTho(Tho instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public QuanLySuaChuaXeDataContext() : 
				base(global::QuanLySuaChuaXe_LinQ.Properties.Settings.Default.QuanLySuaChuaXeConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLySuaChuaXeDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLySuaChuaXeDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLySuaChuaXeDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLySuaChuaXeDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Xe> Xes
		{
			get
			{
				return this.GetTable<Xe>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietHopDong> ChiTietHopDongs
		{
			get
			{
				return this.GetTable<ChiTietHopDong>();
			}
		}
		
		public System.Data.Linq.Table<CongViec> CongViecs
		{
			get
			{
				return this.GetTable<CongViec>();
			}
		}
		
		public System.Data.Linq.Table<HopDong> HopDongs
		{
			get
			{
				return this.GetTable<HopDong>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<KhaNang> KhaNangs
		{
			get
			{
				return this.GetTable<KhaNang>();
			}
		}
		
		public System.Data.Linq.Table<NhomCongViec> NhomCongViecs
		{
			get
			{
				return this.GetTable<NhomCongViec>();
			}
		}
		
		public System.Data.Linq.Table<NhomTho> NhomThos
		{
			get
			{
				return this.GetTable<NhomTho>();
			}
		}
		
		public System.Data.Linq.Table<PhieuThu> PhieuThus
		{
			get
			{
				return this.GetTable<PhieuThu>();
			}
		}
		
		public System.Data.Linq.Table<Tho> Thos
		{
			get
			{
				return this.GetTable<Tho>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Xe")]
	public partial class Xe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_Xe;
		
		private string _Loai_Xe;
		
		private string _Hang_Xe;
		
		private string _ID_KhachHang;
		
		private EntitySet<HopDong> _HopDongs;
		
		private EntityRef<KhachHang> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_XeChanging(string value);
    partial void OnID_XeChanged();
    partial void OnLoai_XeChanging(string value);
    partial void OnLoai_XeChanged();
    partial void OnHang_XeChanging(string value);
    partial void OnHang_XeChanged();
    partial void OnID_KhachHangChanging(string value);
    partial void OnID_KhachHangChanged();
    #endregion
		
		public Xe()
		{
			this._HopDongs = new EntitySet<HopDong>(new Action<HopDong>(this.attach_HopDongs), new Action<HopDong>(this.detach_HopDongs));
			this._KhachHang = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Xe", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_Xe
		{
			get
			{
				return this._ID_Xe;
			}
			set
			{
				if ((this._ID_Xe != value))
				{
					this.OnID_XeChanging(value);
					this.SendPropertyChanging();
					this._ID_Xe = value;
					this.SendPropertyChanged("ID_Xe");
					this.OnID_XeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Loai_Xe", DbType="NVarChar(30)")]
		public string Loai_Xe
		{
			get
			{
				return this._Loai_Xe;
			}
			set
			{
				if ((this._Loai_Xe != value))
				{
					this.OnLoai_XeChanging(value);
					this.SendPropertyChanging();
					this._Loai_Xe = value;
					this.SendPropertyChanged("Loai_Xe");
					this.OnLoai_XeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hang_Xe", DbType="NVarChar(30)")]
		public string Hang_Xe
		{
			get
			{
				return this._Hang_Xe;
			}
			set
			{
				if ((this._Hang_Xe != value))
				{
					this.OnHang_XeChanging(value);
					this.SendPropertyChanging();
					this._Hang_Xe = value;
					this.SendPropertyChanged("Hang_Xe");
					this.OnHang_XeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KhachHang", DbType="Char(5)")]
		public string ID_KhachHang
		{
			get
			{
				return this._ID_KhachHang;
			}
			set
			{
				if ((this._ID_KhachHang != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_KhachHangChanging(value);
					this.SendPropertyChanging();
					this._ID_KhachHang = value;
					this.SendPropertyChanged("ID_KhachHang");
					this.OnID_KhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Xe_HopDong", Storage="_HopDongs", ThisKey="ID_Xe", OtherKey="ID_Xe")]
		public EntitySet<HopDong> HopDongs
		{
			get
			{
				return this._HopDongs;
			}
			set
			{
				this._HopDongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_Xe", Storage="_KhachHang", ThisKey="ID_KhachHang", OtherKey="ID_KhachHang", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.Xes.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.Xes.Add(this);
						this._ID_KhachHang = value.ID_KhachHang;
					}
					else
					{
						this._ID_KhachHang = default(string);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HopDongs(HopDong entity)
		{
			this.SendPropertyChanging();
			entity.Xe = this;
		}
		
		private void detach_HopDongs(HopDong entity)
		{
			this.SendPropertyChanging();
			entity.Xe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietHopDong")]
	public partial class ChiTietHopDong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_Tho;
		
		private string _ID_CongViec;
		
		private string _ID_HopDong;
		
		private EntityRef<CongViec> _CongViec;
		
		private EntityRef<HopDong> _HopDong;
		
		private EntityRef<Tho> _Tho;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ThoChanging(string value);
    partial void OnID_ThoChanged();
    partial void OnID_CongViecChanging(string value);
    partial void OnID_CongViecChanged();
    partial void OnID_HopDongChanging(string value);
    partial void OnID_HopDongChanged();
    #endregion
		
		public ChiTietHopDong()
		{
			this._CongViec = default(EntityRef<CongViec>);
			this._HopDong = default(EntityRef<HopDong>);
			this._Tho = default(EntityRef<Tho>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Tho", DbType="Char(5)")]
		public string ID_Tho
		{
			get
			{
				return this._ID_Tho;
			}
			set
			{
				if ((this._ID_Tho != value))
				{
					if (this._Tho.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ThoChanging(value);
					this.SendPropertyChanging();
					this._ID_Tho = value;
					this.SendPropertyChanged("ID_Tho");
					this.OnID_ThoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CongViec", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_CongViec
		{
			get
			{
				return this._ID_CongViec;
			}
			set
			{
				if ((this._ID_CongViec != value))
				{
					if (this._CongViec.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_CongViecChanging(value);
					this.SendPropertyChanging();
					this._ID_CongViec = value;
					this.SendPropertyChanged("ID_CongViec");
					this.OnID_CongViecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_HopDong", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_HopDong
		{
			get
			{
				return this._ID_HopDong;
			}
			set
			{
				if ((this._ID_HopDong != value))
				{
					if (this._HopDong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_HopDongChanging(value);
					this.SendPropertyChanging();
					this._ID_HopDong = value;
					this.SendPropertyChanged("ID_HopDong");
					this.OnID_HopDongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CongViec_ChiTietHopDong", Storage="_CongViec", ThisKey="ID_CongViec", OtherKey="ID_CongViec", IsForeignKey=true)]
		public CongViec CongViec
		{
			get
			{
				return this._CongViec.Entity;
			}
			set
			{
				CongViec previousValue = this._CongViec.Entity;
				if (((previousValue != value) 
							|| (this._CongViec.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CongViec.Entity = null;
						previousValue.ChiTietHopDongs.Remove(this);
					}
					this._CongViec.Entity = value;
					if ((value != null))
					{
						value.ChiTietHopDongs.Add(this);
						this._ID_CongViec = value.ID_CongViec;
					}
					else
					{
						this._ID_CongViec = default(string);
					}
					this.SendPropertyChanged("CongViec");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HopDong_ChiTietHopDong", Storage="_HopDong", ThisKey="ID_HopDong", OtherKey="ID_HopDong", IsForeignKey=true)]
		public HopDong HopDong
		{
			get
			{
				return this._HopDong.Entity;
			}
			set
			{
				HopDong previousValue = this._HopDong.Entity;
				if (((previousValue != value) 
							|| (this._HopDong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HopDong.Entity = null;
						previousValue.ChiTietHopDongs.Remove(this);
					}
					this._HopDong.Entity = value;
					if ((value != null))
					{
						value.ChiTietHopDongs.Add(this);
						this._ID_HopDong = value.ID_HopDong;
					}
					else
					{
						this._ID_HopDong = default(string);
					}
					this.SendPropertyChanged("HopDong");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tho_ChiTietHopDong", Storage="_Tho", ThisKey="ID_Tho", OtherKey="ID_Tho", IsForeignKey=true)]
		public Tho Tho
		{
			get
			{
				return this._Tho.Entity;
			}
			set
			{
				Tho previousValue = this._Tho.Entity;
				if (((previousValue != value) 
							|| (this._Tho.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tho.Entity = null;
						previousValue.ChiTietHopDongs.Remove(this);
					}
					this._Tho.Entity = value;
					if ((value != null))
					{
						value.ChiTietHopDongs.Add(this);
						this._ID_Tho = value.ID_Tho;
					}
					else
					{
						this._ID_Tho = default(string);
					}
					this.SendPropertyChanged("Tho");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CongViec")]
	public partial class CongViec : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_CongViec;
		
		private string _Ten_CongViec;
		
		private string _ID_NhomCongViec;
		
		private EntitySet<ChiTietHopDong> _ChiTietHopDongs;
		
		private EntitySet<KhaNang> _KhaNangs;
		
		private EntityRef<NhomCongViec> _NhomCongViec;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CongViecChanging(string value);
    partial void OnID_CongViecChanged();
    partial void OnTen_CongViecChanging(string value);
    partial void OnTen_CongViecChanged();
    partial void OnID_NhomCongViecChanging(string value);
    partial void OnID_NhomCongViecChanged();
    #endregion
		
		public CongViec()
		{
			this._ChiTietHopDongs = new EntitySet<ChiTietHopDong>(new Action<ChiTietHopDong>(this.attach_ChiTietHopDongs), new Action<ChiTietHopDong>(this.detach_ChiTietHopDongs));
			this._KhaNangs = new EntitySet<KhaNang>(new Action<KhaNang>(this.attach_KhaNangs), new Action<KhaNang>(this.detach_KhaNangs));
			this._NhomCongViec = default(EntityRef<NhomCongViec>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CongViec", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_CongViec
		{
			get
			{
				return this._ID_CongViec;
			}
			set
			{
				if ((this._ID_CongViec != value))
				{
					this.OnID_CongViecChanging(value);
					this.SendPropertyChanging();
					this._ID_CongViec = value;
					this.SendPropertyChanged("ID_CongViec");
					this.OnID_CongViecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten_CongViec", DbType="NVarChar(100)")]
		public string Ten_CongViec
		{
			get
			{
				return this._Ten_CongViec;
			}
			set
			{
				if ((this._Ten_CongViec != value))
				{
					this.OnTen_CongViecChanging(value);
					this.SendPropertyChanging();
					this._Ten_CongViec = value;
					this.SendPropertyChanged("Ten_CongViec");
					this.OnTen_CongViecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NhomCongViec", DbType="Char(5)")]
		public string ID_NhomCongViec
		{
			get
			{
				return this._ID_NhomCongViec;
			}
			set
			{
				if ((this._ID_NhomCongViec != value))
				{
					if (this._NhomCongViec.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_NhomCongViecChanging(value);
					this.SendPropertyChanging();
					this._ID_NhomCongViec = value;
					this.SendPropertyChanged("ID_NhomCongViec");
					this.OnID_NhomCongViecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CongViec_ChiTietHopDong", Storage="_ChiTietHopDongs", ThisKey="ID_CongViec", OtherKey="ID_CongViec")]
		public EntitySet<ChiTietHopDong> ChiTietHopDongs
		{
			get
			{
				return this._ChiTietHopDongs;
			}
			set
			{
				this._ChiTietHopDongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CongViec_KhaNang", Storage="_KhaNangs", ThisKey="ID_CongViec", OtherKey="ID_CongViec")]
		public EntitySet<KhaNang> KhaNangs
		{
			get
			{
				return this._KhaNangs;
			}
			set
			{
				this._KhaNangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhomCongViec_CongViec", Storage="_NhomCongViec", ThisKey="ID_NhomCongViec", OtherKey="ID_NhomCongViec", IsForeignKey=true)]
		public NhomCongViec NhomCongViec
		{
			get
			{
				return this._NhomCongViec.Entity;
			}
			set
			{
				NhomCongViec previousValue = this._NhomCongViec.Entity;
				if (((previousValue != value) 
							|| (this._NhomCongViec.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhomCongViec.Entity = null;
						previousValue.CongViecs.Remove(this);
					}
					this._NhomCongViec.Entity = value;
					if ((value != null))
					{
						value.CongViecs.Add(this);
						this._ID_NhomCongViec = value.ID_NhomCongViec;
					}
					else
					{
						this._ID_NhomCongViec = default(string);
					}
					this.SendPropertyChanged("NhomCongViec");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietHopDongs(ChiTietHopDong entity)
		{
			this.SendPropertyChanging();
			entity.CongViec = this;
		}
		
		private void detach_ChiTietHopDongs(ChiTietHopDong entity)
		{
			this.SendPropertyChanging();
			entity.CongViec = null;
		}
		
		private void attach_KhaNangs(KhaNang entity)
		{
			this.SendPropertyChanging();
			entity.CongViec = this;
		}
		
		private void detach_KhaNangs(KhaNang entity)
		{
			this.SendPropertyChanging();
			entity.CongViec = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HopDong")]
	public partial class HopDong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_HopDong;
		
		private string _Ten_HopDong;
		
		private System.Nullable<System.DateTime> _NgayBatDau_HopDong;
		
		private System.Nullable<System.DateTime> _NgayKetThuc_HopDong;
		
		private System.Nullable<double> _GiaTri_HopDong;
		
		private string _ID_Xe;
		
		private EntitySet<ChiTietHopDong> _ChiTietHopDongs;
		
		private EntitySet<PhieuThu> _PhieuThus;
		
		private EntityRef<Xe> _Xe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_HopDongChanging(string value);
    partial void OnID_HopDongChanged();
    partial void OnTen_HopDongChanging(string value);
    partial void OnTen_HopDongChanged();
    partial void OnNgayBatDau_HopDongChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayBatDau_HopDongChanged();
    partial void OnNgayKetThuc_HopDongChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayKetThuc_HopDongChanged();
    partial void OnGiaTri_HopDongChanging(System.Nullable<double> value);
    partial void OnGiaTri_HopDongChanged();
    partial void OnID_XeChanging(string value);
    partial void OnID_XeChanged();
    #endregion
		
		public HopDong()
		{
			this._ChiTietHopDongs = new EntitySet<ChiTietHopDong>(new Action<ChiTietHopDong>(this.attach_ChiTietHopDongs), new Action<ChiTietHopDong>(this.detach_ChiTietHopDongs));
			this._PhieuThus = new EntitySet<PhieuThu>(new Action<PhieuThu>(this.attach_PhieuThus), new Action<PhieuThu>(this.detach_PhieuThus));
			this._Xe = default(EntityRef<Xe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_HopDong", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_HopDong
		{
			get
			{
				return this._ID_HopDong;
			}
			set
			{
				if ((this._ID_HopDong != value))
				{
					this.OnID_HopDongChanging(value);
					this.SendPropertyChanging();
					this._ID_HopDong = value;
					this.SendPropertyChanged("ID_HopDong");
					this.OnID_HopDongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten_HopDong", DbType="NVarChar(100)")]
		public string Ten_HopDong
		{
			get
			{
				return this._Ten_HopDong;
			}
			set
			{
				if ((this._Ten_HopDong != value))
				{
					this.OnTen_HopDongChanging(value);
					this.SendPropertyChanging();
					this._Ten_HopDong = value;
					this.SendPropertyChanged("Ten_HopDong");
					this.OnTen_HopDongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBatDau_HopDong", DbType="Date")]
		public System.Nullable<System.DateTime> NgayBatDau_HopDong
		{
			get
			{
				return this._NgayBatDau_HopDong;
			}
			set
			{
				if ((this._NgayBatDau_HopDong != value))
				{
					this.OnNgayBatDau_HopDongChanging(value);
					this.SendPropertyChanging();
					this._NgayBatDau_HopDong = value;
					this.SendPropertyChanged("NgayBatDau_HopDong");
					this.OnNgayBatDau_HopDongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKetThuc_HopDong", DbType="Date")]
		public System.Nullable<System.DateTime> NgayKetThuc_HopDong
		{
			get
			{
				return this._NgayKetThuc_HopDong;
			}
			set
			{
				if ((this._NgayKetThuc_HopDong != value))
				{
					this.OnNgayKetThuc_HopDongChanging(value);
					this.SendPropertyChanging();
					this._NgayKetThuc_HopDong = value;
					this.SendPropertyChanged("NgayKetThuc_HopDong");
					this.OnNgayKetThuc_HopDongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaTri_HopDong", DbType="Float")]
		public System.Nullable<double> GiaTri_HopDong
		{
			get
			{
				return this._GiaTri_HopDong;
			}
			set
			{
				if ((this._GiaTri_HopDong != value))
				{
					this.OnGiaTri_HopDongChanging(value);
					this.SendPropertyChanging();
					this._GiaTri_HopDong = value;
					this.SendPropertyChanged("GiaTri_HopDong");
					this.OnGiaTri_HopDongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Xe", DbType="Char(5)")]
		public string ID_Xe
		{
			get
			{
				return this._ID_Xe;
			}
			set
			{
				if ((this._ID_Xe != value))
				{
					if (this._Xe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_XeChanging(value);
					this.SendPropertyChanging();
					this._ID_Xe = value;
					this.SendPropertyChanged("ID_Xe");
					this.OnID_XeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HopDong_ChiTietHopDong", Storage="_ChiTietHopDongs", ThisKey="ID_HopDong", OtherKey="ID_HopDong")]
		public EntitySet<ChiTietHopDong> ChiTietHopDongs
		{
			get
			{
				return this._ChiTietHopDongs;
			}
			set
			{
				this._ChiTietHopDongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HopDong_PhieuThu", Storage="_PhieuThus", ThisKey="ID_HopDong", OtherKey="ID_HopDong")]
		public EntitySet<PhieuThu> PhieuThus
		{
			get
			{
				return this._PhieuThus;
			}
			set
			{
				this._PhieuThus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Xe_HopDong", Storage="_Xe", ThisKey="ID_Xe", OtherKey="ID_Xe", IsForeignKey=true)]
		public Xe Xe
		{
			get
			{
				return this._Xe.Entity;
			}
			set
			{
				Xe previousValue = this._Xe.Entity;
				if (((previousValue != value) 
							|| (this._Xe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Xe.Entity = null;
						previousValue.HopDongs.Remove(this);
					}
					this._Xe.Entity = value;
					if ((value != null))
					{
						value.HopDongs.Add(this);
						this._ID_Xe = value.ID_Xe;
					}
					else
					{
						this._ID_Xe = default(string);
					}
					this.SendPropertyChanged("Xe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietHopDongs(ChiTietHopDong entity)
		{
			this.SendPropertyChanging();
			entity.HopDong = this;
		}
		
		private void detach_ChiTietHopDongs(ChiTietHopDong entity)
		{
			this.SendPropertyChanging();
			entity.HopDong = null;
		}
		
		private void attach_PhieuThus(PhieuThu entity)
		{
			this.SendPropertyChanging();
			entity.HopDong = this;
		}
		
		private void detach_PhieuThus(PhieuThu entity)
		{
			this.SendPropertyChanging();
			entity.HopDong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_KhachHang;
		
		private string _HoTen_KhachHang;
		
		private System.Nullable<bool> _GioiTinh_KhachHang;
		
		private System.Nullable<System.DateTime> _NgaySinh_KhachHang;
		
		private string _SoDienThoai_KhachHang;
		
		private EntitySet<Xe> _Xes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_KhachHangChanging(string value);
    partial void OnID_KhachHangChanged();
    partial void OnHoTen_KhachHangChanging(string value);
    partial void OnHoTen_KhachHangChanged();
    partial void OnGioiTinh_KhachHangChanging(System.Nullable<bool> value);
    partial void OnGioiTinh_KhachHangChanged();
    partial void OnNgaySinh_KhachHangChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinh_KhachHangChanged();
    partial void OnSoDienThoai_KhachHangChanging(string value);
    partial void OnSoDienThoai_KhachHangChanged();
    #endregion
		
		public KhachHang()
		{
			this._Xes = new EntitySet<Xe>(new Action<Xe>(this.attach_Xes), new Action<Xe>(this.detach_Xes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KhachHang", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_KhachHang
		{
			get
			{
				return this._ID_KhachHang;
			}
			set
			{
				if ((this._ID_KhachHang != value))
				{
					this.OnID_KhachHangChanging(value);
					this.SendPropertyChanging();
					this._ID_KhachHang = value;
					this.SendPropertyChanged("ID_KhachHang");
					this.OnID_KhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen_KhachHang", DbType="NVarChar(30)")]
		public string HoTen_KhachHang
		{
			get
			{
				return this._HoTen_KhachHang;
			}
			set
			{
				if ((this._HoTen_KhachHang != value))
				{
					this.OnHoTen_KhachHangChanging(value);
					this.SendPropertyChanging();
					this._HoTen_KhachHang = value;
					this.SendPropertyChanged("HoTen_KhachHang");
					this.OnHoTen_KhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh_KhachHang", DbType="Bit")]
		public System.Nullable<bool> GioiTinh_KhachHang
		{
			get
			{
				return this._GioiTinh_KhachHang;
			}
			set
			{
				if ((this._GioiTinh_KhachHang != value))
				{
					this.OnGioiTinh_KhachHangChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh_KhachHang = value;
					this.SendPropertyChanged("GioiTinh_KhachHang");
					this.OnGioiTinh_KhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh_KhachHang", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinh_KhachHang
		{
			get
			{
				return this._NgaySinh_KhachHang;
			}
			set
			{
				if ((this._NgaySinh_KhachHang != value))
				{
					this.OnNgaySinh_KhachHangChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh_KhachHang = value;
					this.SendPropertyChanged("NgaySinh_KhachHang");
					this.OnNgaySinh_KhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai_KhachHang", DbType="Char(10)")]
		public string SoDienThoai_KhachHang
		{
			get
			{
				return this._SoDienThoai_KhachHang;
			}
			set
			{
				if ((this._SoDienThoai_KhachHang != value))
				{
					this.OnSoDienThoai_KhachHangChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai_KhachHang = value;
					this.SendPropertyChanged("SoDienThoai_KhachHang");
					this.OnSoDienThoai_KhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_Xe", Storage="_Xes", ThisKey="ID_KhachHang", OtherKey="ID_KhachHang")]
		public EntitySet<Xe> Xes
		{
			get
			{
				return this._Xes;
			}
			set
			{
				this._Xes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Xes(Xe entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_Xes(Xe entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhaNang")]
	public partial class KhaNang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_Tho;
		
		private string _ID_CongViec;
		
		private EntityRef<CongViec> _CongViec;
		
		private EntityRef<Tho> _Tho;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ThoChanging(string value);
    partial void OnID_ThoChanged();
    partial void OnID_CongViecChanging(string value);
    partial void OnID_CongViecChanged();
    #endregion
		
		public KhaNang()
		{
			this._CongViec = default(EntityRef<CongViec>);
			this._Tho = default(EntityRef<Tho>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Tho", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_Tho
		{
			get
			{
				return this._ID_Tho;
			}
			set
			{
				if ((this._ID_Tho != value))
				{
					if (this._Tho.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ThoChanging(value);
					this.SendPropertyChanging();
					this._ID_Tho = value;
					this.SendPropertyChanged("ID_Tho");
					this.OnID_ThoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CongViec", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_CongViec
		{
			get
			{
				return this._ID_CongViec;
			}
			set
			{
				if ((this._ID_CongViec != value))
				{
					if (this._CongViec.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_CongViecChanging(value);
					this.SendPropertyChanging();
					this._ID_CongViec = value;
					this.SendPropertyChanged("ID_CongViec");
					this.OnID_CongViecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CongViec_KhaNang", Storage="_CongViec", ThisKey="ID_CongViec", OtherKey="ID_CongViec", IsForeignKey=true)]
		public CongViec CongViec
		{
			get
			{
				return this._CongViec.Entity;
			}
			set
			{
				CongViec previousValue = this._CongViec.Entity;
				if (((previousValue != value) 
							|| (this._CongViec.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CongViec.Entity = null;
						previousValue.KhaNangs.Remove(this);
					}
					this._CongViec.Entity = value;
					if ((value != null))
					{
						value.KhaNangs.Add(this);
						this._ID_CongViec = value.ID_CongViec;
					}
					else
					{
						this._ID_CongViec = default(string);
					}
					this.SendPropertyChanged("CongViec");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tho_KhaNang", Storage="_Tho", ThisKey="ID_Tho", OtherKey="ID_Tho", IsForeignKey=true)]
		public Tho Tho
		{
			get
			{
				return this._Tho.Entity;
			}
			set
			{
				Tho previousValue = this._Tho.Entity;
				if (((previousValue != value) 
							|| (this._Tho.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tho.Entity = null;
						previousValue.KhaNangs.Remove(this);
					}
					this._Tho.Entity = value;
					if ((value != null))
					{
						value.KhaNangs.Add(this);
						this._ID_Tho = value.ID_Tho;
					}
					else
					{
						this._ID_Tho = default(string);
					}
					this.SendPropertyChanged("Tho");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhomCongViec")]
	public partial class NhomCongViec : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_NhomCongViec;
		
		private string _Ten_NhomCongViec;
		
		private EntitySet<CongViec> _CongViecs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_NhomCongViecChanging(string value);
    partial void OnID_NhomCongViecChanged();
    partial void OnTen_NhomCongViecChanging(string value);
    partial void OnTen_NhomCongViecChanged();
    #endregion
		
		public NhomCongViec()
		{
			this._CongViecs = new EntitySet<CongViec>(new Action<CongViec>(this.attach_CongViecs), new Action<CongViec>(this.detach_CongViecs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NhomCongViec", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_NhomCongViec
		{
			get
			{
				return this._ID_NhomCongViec;
			}
			set
			{
				if ((this._ID_NhomCongViec != value))
				{
					this.OnID_NhomCongViecChanging(value);
					this.SendPropertyChanging();
					this._ID_NhomCongViec = value;
					this.SendPropertyChanged("ID_NhomCongViec");
					this.OnID_NhomCongViecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten_NhomCongViec", DbType="NVarChar(100)")]
		public string Ten_NhomCongViec
		{
			get
			{
				return this._Ten_NhomCongViec;
			}
			set
			{
				if ((this._Ten_NhomCongViec != value))
				{
					this.OnTen_NhomCongViecChanging(value);
					this.SendPropertyChanging();
					this._Ten_NhomCongViec = value;
					this.SendPropertyChanged("Ten_NhomCongViec");
					this.OnTen_NhomCongViecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhomCongViec_CongViec", Storage="_CongViecs", ThisKey="ID_NhomCongViec", OtherKey="ID_NhomCongViec")]
		public EntitySet<CongViec> CongViecs
		{
			get
			{
				return this._CongViecs;
			}
			set
			{
				this._CongViecs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CongViecs(CongViec entity)
		{
			this.SendPropertyChanging();
			entity.NhomCongViec = this;
		}
		
		private void detach_CongViecs(CongViec entity)
		{
			this.SendPropertyChanging();
			entity.NhomCongViec = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhomTho")]
	public partial class NhomTho : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_NhomTho;
		
		private string _Ten_NhomTho;
		
		private string _ID_TruongNhom;
		
		private EntitySet<Tho> _Thos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_NhomThoChanging(string value);
    partial void OnID_NhomThoChanged();
    partial void OnTen_NhomThoChanging(string value);
    partial void OnTen_NhomThoChanged();
    partial void OnID_TruongNhomChanging(string value);
    partial void OnID_TruongNhomChanged();
    #endregion
		
		public NhomTho()
		{
			this._Thos = new EntitySet<Tho>(new Action<Tho>(this.attach_Thos), new Action<Tho>(this.detach_Thos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NhomTho", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_NhomTho
		{
			get
			{
				return this._ID_NhomTho;
			}
			set
			{
				if ((this._ID_NhomTho != value))
				{
					this.OnID_NhomThoChanging(value);
					this.SendPropertyChanging();
					this._ID_NhomTho = value;
					this.SendPropertyChanged("ID_NhomTho");
					this.OnID_NhomThoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten_NhomTho", DbType="NVarChar(100)")]
		public string Ten_NhomTho
		{
			get
			{
				return this._Ten_NhomTho;
			}
			set
			{
				if ((this._Ten_NhomTho != value))
				{
					this.OnTen_NhomThoChanging(value);
					this.SendPropertyChanging();
					this._Ten_NhomTho = value;
					this.SendPropertyChanged("Ten_NhomTho");
					this.OnTen_NhomThoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TruongNhom", DbType="Char(5)")]
		public string ID_TruongNhom
		{
			get
			{
				return this._ID_TruongNhom;
			}
			set
			{
				if ((this._ID_TruongNhom != value))
				{
					this.OnID_TruongNhomChanging(value);
					this.SendPropertyChanging();
					this._ID_TruongNhom = value;
					this.SendPropertyChanged("ID_TruongNhom");
					this.OnID_TruongNhomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhomTho_Tho", Storage="_Thos", ThisKey="ID_NhomTho", OtherKey="ID_NhomTho")]
		public EntitySet<Tho> Thos
		{
			get
			{
				return this._Thos;
			}
			set
			{
				this._Thos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Thos(Tho entity)
		{
			this.SendPropertyChanging();
			entity.NhomTho = this;
		}
		
		private void detach_Thos(Tho entity)
		{
			this.SendPropertyChanging();
			entity.NhomTho = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuThu")]
	public partial class PhieuThu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_PhieuThu;
		
		private string _HoTenNguoiThu_PhieuThu;
		
		private string _HoTenNguoiNop_PhieuThu;
		
		private System.Nullable<System.DateTime> _NgayThu_PhieuThu;
		
		private System.Nullable<double> _SoTienThu_PhieuThu;
		
		private string _ID_HopDong;
		
		private EntityRef<HopDong> _HopDong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PhieuThuChanging(string value);
    partial void OnID_PhieuThuChanged();
    partial void OnHoTenNguoiThu_PhieuThuChanging(string value);
    partial void OnHoTenNguoiThu_PhieuThuChanged();
    partial void OnHoTenNguoiNop_PhieuThuChanging(string value);
    partial void OnHoTenNguoiNop_PhieuThuChanged();
    partial void OnNgayThu_PhieuThuChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayThu_PhieuThuChanged();
    partial void OnSoTienThu_PhieuThuChanging(System.Nullable<double> value);
    partial void OnSoTienThu_PhieuThuChanged();
    partial void OnID_HopDongChanging(string value);
    partial void OnID_HopDongChanged();
    #endregion
		
		public PhieuThu()
		{
			this._HopDong = default(EntityRef<HopDong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PhieuThu", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_PhieuThu
		{
			get
			{
				return this._ID_PhieuThu;
			}
			set
			{
				if ((this._ID_PhieuThu != value))
				{
					this.OnID_PhieuThuChanging(value);
					this.SendPropertyChanging();
					this._ID_PhieuThu = value;
					this.SendPropertyChanged("ID_PhieuThu");
					this.OnID_PhieuThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTenNguoiThu_PhieuThu", DbType="NVarChar(30)")]
		public string HoTenNguoiThu_PhieuThu
		{
			get
			{
				return this._HoTenNguoiThu_PhieuThu;
			}
			set
			{
				if ((this._HoTenNguoiThu_PhieuThu != value))
				{
					this.OnHoTenNguoiThu_PhieuThuChanging(value);
					this.SendPropertyChanging();
					this._HoTenNguoiThu_PhieuThu = value;
					this.SendPropertyChanged("HoTenNguoiThu_PhieuThu");
					this.OnHoTenNguoiThu_PhieuThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTenNguoiNop_PhieuThu", DbType="NVarChar(30)")]
		public string HoTenNguoiNop_PhieuThu
		{
			get
			{
				return this._HoTenNguoiNop_PhieuThu;
			}
			set
			{
				if ((this._HoTenNguoiNop_PhieuThu != value))
				{
					this.OnHoTenNguoiNop_PhieuThuChanging(value);
					this.SendPropertyChanging();
					this._HoTenNguoiNop_PhieuThu = value;
					this.SendPropertyChanged("HoTenNguoiNop_PhieuThu");
					this.OnHoTenNguoiNop_PhieuThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThu_PhieuThu", DbType="Date")]
		public System.Nullable<System.DateTime> NgayThu_PhieuThu
		{
			get
			{
				return this._NgayThu_PhieuThu;
			}
			set
			{
				if ((this._NgayThu_PhieuThu != value))
				{
					this.OnNgayThu_PhieuThuChanging(value);
					this.SendPropertyChanging();
					this._NgayThu_PhieuThu = value;
					this.SendPropertyChanged("NgayThu_PhieuThu");
					this.OnNgayThu_PhieuThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTienThu_PhieuThu", DbType="Float")]
		public System.Nullable<double> SoTienThu_PhieuThu
		{
			get
			{
				return this._SoTienThu_PhieuThu;
			}
			set
			{
				if ((this._SoTienThu_PhieuThu != value))
				{
					this.OnSoTienThu_PhieuThuChanging(value);
					this.SendPropertyChanging();
					this._SoTienThu_PhieuThu = value;
					this.SendPropertyChanged("SoTienThu_PhieuThu");
					this.OnSoTienThu_PhieuThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_HopDong", DbType="Char(5)")]
		public string ID_HopDong
		{
			get
			{
				return this._ID_HopDong;
			}
			set
			{
				if ((this._ID_HopDong != value))
				{
					if (this._HopDong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_HopDongChanging(value);
					this.SendPropertyChanging();
					this._ID_HopDong = value;
					this.SendPropertyChanged("ID_HopDong");
					this.OnID_HopDongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HopDong_PhieuThu", Storage="_HopDong", ThisKey="ID_HopDong", OtherKey="ID_HopDong", IsForeignKey=true)]
		public HopDong HopDong
		{
			get
			{
				return this._HopDong.Entity;
			}
			set
			{
				HopDong previousValue = this._HopDong.Entity;
				if (((previousValue != value) 
							|| (this._HopDong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HopDong.Entity = null;
						previousValue.PhieuThus.Remove(this);
					}
					this._HopDong.Entity = value;
					if ((value != null))
					{
						value.PhieuThus.Add(this);
						this._ID_HopDong = value.ID_HopDong;
					}
					else
					{
						this._ID_HopDong = default(string);
					}
					this.SendPropertyChanged("HopDong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tho")]
	public partial class Tho : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_Tho;
		
		private string _HoTen_Tho;
		
		private System.Nullable<bool> _GioiTinh_Tho;
		
		private System.Nullable<System.DateTime> _NgaySinh_Tho;
		
		private string _DiaChi_Tho;
		
		private System.Nullable<double> _Luong_Tho;
		
		private string _ID_NhomTho;
		
		private EntitySet<ChiTietHopDong> _ChiTietHopDongs;
		
		private EntitySet<KhaNang> _KhaNangs;
		
		private EntityRef<NhomTho> _NhomTho;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ThoChanging(string value);
    partial void OnID_ThoChanged();
    partial void OnHoTen_ThoChanging(string value);
    partial void OnHoTen_ThoChanged();
    partial void OnGioiTinh_ThoChanging(System.Nullable<bool> value);
    partial void OnGioiTinh_ThoChanged();
    partial void OnNgaySinh_ThoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinh_ThoChanged();
    partial void OnDiaChi_ThoChanging(string value);
    partial void OnDiaChi_ThoChanged();
    partial void OnLuong_ThoChanging(System.Nullable<double> value);
    partial void OnLuong_ThoChanged();
    partial void OnID_NhomThoChanging(string value);
    partial void OnID_NhomThoChanged();
    #endregion
		
		public Tho()
		{
			this._ChiTietHopDongs = new EntitySet<ChiTietHopDong>(new Action<ChiTietHopDong>(this.attach_ChiTietHopDongs), new Action<ChiTietHopDong>(this.detach_ChiTietHopDongs));
			this._KhaNangs = new EntitySet<KhaNang>(new Action<KhaNang>(this.attach_KhaNangs), new Action<KhaNang>(this.detach_KhaNangs));
			this._NhomTho = default(EntityRef<NhomTho>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Tho", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_Tho
		{
			get
			{
				return this._ID_Tho;
			}
			set
			{
				if ((this._ID_Tho != value))
				{
					this.OnID_ThoChanging(value);
					this.SendPropertyChanging();
					this._ID_Tho = value;
					this.SendPropertyChanged("ID_Tho");
					this.OnID_ThoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen_Tho", DbType="NVarChar(30)")]
		public string HoTen_Tho
		{
			get
			{
				return this._HoTen_Tho;
			}
			set
			{
				if ((this._HoTen_Tho != value))
				{
					this.OnHoTen_ThoChanging(value);
					this.SendPropertyChanging();
					this._HoTen_Tho = value;
					this.SendPropertyChanged("HoTen_Tho");
					this.OnHoTen_ThoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh_Tho", DbType="Bit")]
		public System.Nullable<bool> GioiTinh_Tho
		{
			get
			{
				return this._GioiTinh_Tho;
			}
			set
			{
				if ((this._GioiTinh_Tho != value))
				{
					this.OnGioiTinh_ThoChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh_Tho = value;
					this.SendPropertyChanged("GioiTinh_Tho");
					this.OnGioiTinh_ThoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh_Tho", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinh_Tho
		{
			get
			{
				return this._NgaySinh_Tho;
			}
			set
			{
				if ((this._NgaySinh_Tho != value))
				{
					this.OnNgaySinh_ThoChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh_Tho = value;
					this.SendPropertyChanged("NgaySinh_Tho");
					this.OnNgaySinh_ThoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi_Tho", DbType="NVarChar(10)")]
		public string DiaChi_Tho
		{
			get
			{
				return this._DiaChi_Tho;
			}
			set
			{
				if ((this._DiaChi_Tho != value))
				{
					this.OnDiaChi_ThoChanging(value);
					this.SendPropertyChanging();
					this._DiaChi_Tho = value;
					this.SendPropertyChanged("DiaChi_Tho");
					this.OnDiaChi_ThoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Luong_Tho", DbType="Float")]
		public System.Nullable<double> Luong_Tho
		{
			get
			{
				return this._Luong_Tho;
			}
			set
			{
				if ((this._Luong_Tho != value))
				{
					this.OnLuong_ThoChanging(value);
					this.SendPropertyChanging();
					this._Luong_Tho = value;
					this.SendPropertyChanged("Luong_Tho");
					this.OnLuong_ThoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NhomTho", DbType="Char(5)")]
		public string ID_NhomTho
		{
			get
			{
				return this._ID_NhomTho;
			}
			set
			{
				if ((this._ID_NhomTho != value))
				{
					if (this._NhomTho.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_NhomThoChanging(value);
					this.SendPropertyChanging();
					this._ID_NhomTho = value;
					this.SendPropertyChanged("ID_NhomTho");
					this.OnID_NhomThoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tho_ChiTietHopDong", Storage="_ChiTietHopDongs", ThisKey="ID_Tho", OtherKey="ID_Tho")]
		public EntitySet<ChiTietHopDong> ChiTietHopDongs
		{
			get
			{
				return this._ChiTietHopDongs;
			}
			set
			{
				this._ChiTietHopDongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tho_KhaNang", Storage="_KhaNangs", ThisKey="ID_Tho", OtherKey="ID_Tho")]
		public EntitySet<KhaNang> KhaNangs
		{
			get
			{
				return this._KhaNangs;
			}
			set
			{
				this._KhaNangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhomTho_Tho", Storage="_NhomTho", ThisKey="ID_NhomTho", OtherKey="ID_NhomTho", IsForeignKey=true)]
		public NhomTho NhomTho
		{
			get
			{
				return this._NhomTho.Entity;
			}
			set
			{
				NhomTho previousValue = this._NhomTho.Entity;
				if (((previousValue != value) 
							|| (this._NhomTho.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhomTho.Entity = null;
						previousValue.Thos.Remove(this);
					}
					this._NhomTho.Entity = value;
					if ((value != null))
					{
						value.Thos.Add(this);
						this._ID_NhomTho = value.ID_NhomTho;
					}
					else
					{
						this._ID_NhomTho = default(string);
					}
					this.SendPropertyChanged("NhomTho");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietHopDongs(ChiTietHopDong entity)
		{
			this.SendPropertyChanging();
			entity.Tho = this;
		}
		
		private void detach_ChiTietHopDongs(ChiTietHopDong entity)
		{
			this.SendPropertyChanging();
			entity.Tho = null;
		}
		
		private void attach_KhaNangs(KhaNang entity)
		{
			this.SendPropertyChanging();
			entity.Tho = this;
		}
		
		private void detach_KhaNangs(KhaNang entity)
		{
			this.SendPropertyChanging();
			entity.Tho = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _User_name;
		
		private string _Password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_nameChanging(string value);
    partial void OnUser_nameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_name", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string User_name
		{
			get
			{
				return this._User_name;
			}
			set
			{
				if ((this._User_name != value))
				{
					this.OnUser_nameChanging(value);
					this.SendPropertyChanging();
					this._User_name = value;
					this.SendPropertyChanged("User_name");
					this.OnUser_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
